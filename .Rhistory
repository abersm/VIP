lower = "adjusted_lower_ci",
upper = "adjusted_upper_ci",
y_var = "study_label",
point_color_var = "is_meta",
point_color = c("#4E4E4E", "#CD2990"),
point_border_thickness = 0,
vert_line_x_position = 1,
#x_axis_title = "log2 relative risk", x_axis_scale = "log2",
x_axis_title = "Relative risk", x_axis_breaks = seq(0.5, 2, 0.5),
aspect_ratio = 0.75,
odd_stripe_colors = c("#CD299025", rep_len("#00000000", length.out = nrow(df_safety) - 1L)),
y_axis_labels = NULL
) %>%
add_column_table(
plot_margin = margin(),
right_cols = list("Estimate (95% CI)" = ".estimate_label"),
left_cols = list(Study = ".y_var"),
left_args = list(label_hjust = 1)
)
p3[[2]] <- p2[[2]] + ggplot2::annotate(
geom = "text",
size = 12/.pt,
x = I(c(-1, -1, -1, -1)), y = I(c(-0.1, -0.2, -0.3, -0.4)),
#label = format_heterogeneity_label(6.5, 0.0034, 0.001),
label = c("underline('Heterogeneity:')", "italic(I)^2~`=`~'98.1%'", "τ^2~`=`~'0.0477'", "italic(p)~`<`~0.0001"),
hjust = 0, vjust = 0.5,
parse = TRUE
)
p3
p$p3 <- p3
p3 <- p2 <- df_safety %>%
plot_forest(
estimate = "adjusted_estimate",
lower = "adjusted_lower_ci",
upper = "adjusted_upper_ci",
y_var = "study_label",
point_color_var = "is_meta",
point_color = c("#4E4E4E", "#CD2990"),
point_border_thickness = 0,
vert_line_x_position = 1,
x_axis_title = "log2 relative risk", x_axis_scale = "log2",
#x_axis_title = "Relative risk", x_axis_breaks = seq(0.5, 2, 0.5),
aspect_ratio = 0.75,
odd_stripe_colors = c("#CD299025", rep_len("#00000000", length.out = nrow(df_safety) - 1L)),
y_axis_labels = NULL
) %>%
add_column_table(
plot_margin = margin(),
right_cols = list("Estimate (95% CI)" = ".estimate_label"),
left_cols = list(Study = ".y_var"),
left_args = list(label_hjust = 1)
)
p3[[2]] <- p2[[2]] + ggplot2::annotate(
geom = "text",
size = 12/.pt,
x = I(c(-1, -1, -1, -1)), y = I(c(-0.1, -0.2, -0.3, -0.4)),
#label = format_heterogeneity_label(6.5, 0.0034, 0.001),
label = c("underline('Heterogeneity:')", "italic(I)^2~`=`~'98.1%'", "τ^2~`=`~'0.0477'", "italic(p)~`<`~0.0001"),
hjust = 0, vjust = 0.5,
parse = TRUE
)
p3
p$p2 <- p3
p3 <- p2 <- df_safety %>%
plot_forest(
estimate = "adjusted_estimate",
lower = "adjusted_lower_ci",
upper = "adjusted_upper_ci",
y_var = "study_label",
point_color_var = "is_meta",
point_color = c("#4E4E4E", "#CD2990"),
point_border_thickness = 0,
vert_line_x_position = 1,
x_axis_title = "log2 relative risk", x_axis_scale = "log2", x_axis_labels = identity,
#x_axis_title = "Relative risk", x_axis_breaks = seq(0.5, 2, 0.5),
aspect_ratio = 0.75,
odd_stripe_colors = c("#CD299025", rep_len("#00000000", length.out = nrow(df_safety) - 1L)),
y_axis_labels = NULL
) %>%
add_column_table(
plot_margin = margin(),
right_cols = list("Estimate (95% CI)" = ".estimate_label"),
left_cols = list(Study = ".y_var"),
left_args = list(label_hjust = 1)
)
p3[[2]] <- p2[[2]] + ggplot2::annotate(
geom = "text",
size = 12/.pt,
x = I(c(-1, -1, -1, -1)), y = I(c(-0.1, -0.2, -0.3, -0.4)),
#label = format_heterogeneity_label(6.5, 0.0034, 0.001),
label = c("underline('Heterogeneity:')", "italic(I)^2~`=`~'98.1%'", "τ^2~`=`~'0.0477'", "italic(p)~`<`~0.0001"),
hjust = 0, vjust = 0.5,
parse = TRUE
)
p$p4 <- p3
p3
p %>% preview()
p3
element_blank() %>% length
element_blank() %>% is.list
element_blank() %>% class
p
RM()
unique(ae$outcome)
unique(
c(
"Pregnant",
"Infant",
"Child",
"Infant/child",
"Adult",
"Adult/elder",
"Immunocomp",
tryCatch(grepv("immunocomp", unique(c(ve$population, ae$population, epi$population)), ignore.case = TRUE), error = function(e) NULL),
tryCatch(grepv("[0-9]", grepv("pregnant|\\binfant|\\bchild\\b|\\badult\\b|\\belder\\b", c(ve$population, ae$population, epi$population), ignore.case = TRUE), invert = TRUE), error = function(e) NULL)
)
)
tryCatch(setdiff(c(ve$vax_product, ae$vax_product), c("Other", "Multiple")), error = function(e) NULL)
ve$vax_product
tryCatch(setdiff(c(ve$vax_product, ae$vax_product), c("Other", "Multiple")), error = function(e) NULL)
tryCatch(setdiff(unique(ve$outcome), c("Other", "Other- non-RSV LRTIs", "Other- composite of severe, critical, and death")), , error = function(e) NULL)
tryCatch(setdiff(unique(ve$outcome), c("Other", "Other- non-RSV LRTIs", "Other- composite of severe, critical, and death")), error = function(e) NULL)
tryCatch(unique(ae$outcome), error = function(e) NULL)
s("waffle", directory = paste_path("VIP"))
o()
s("xml2", directory = paste_path("VIP"))
s("meta::", directory = paste_path("VIP"))
domain
clr_luminance
s("is_odd")
s("is_odd", directory = paste_path("VIP"))
o(plot_forest)
is_odd
5 > 4 && 3 %% 2 != 0
5 > 4 && 4 %% 2 != 0
o(breaks_linear)
s("repl_len")
s("virus", directory = paste_path("VIP"))
s("update_list", directory = paste_path("VIP"))
s("Stop", directory = paste_path("VIP"))
s("tx_group", directory = paste_path("VIP"))
.pt
.pt==2.845276
format(.pt)
format(.pt, digits = 10)
format(.pt, digits = 100)
format(.pt, digits = 20)
o(.pt)
s(".pt <- ")
.pt
alpha
alpha %>% f
s(" bind_rows", directory = paste_path("VIP"))
s(" clr_text", directory = paste_path("VIP"))
s("repl_len", directory = paste_path("VIP"))
s("png", directory = paste_path("VIP"))
s("myplot", directory = paste_path("VIP"))
s("exportPlot", directory = paste_path("VIP"))
VIP::ve
lintr::object_usage_linter()
lintr::object_usage_linter()
lintr::object_usage_linter()()
codetools::checkUsagePackage("VIP")
codetools::checkUsagePackage("VIP")
domain %>% distinct(id_redcap, id_covidence)
core %>% distinct(id_redcap, id_covidence)
core %>% distinct(.data$id_redcap, id_covidence)
core %>% distinct(.data$id_redcap, .data$id_covidence)
codetools::checkUsagePackage("VIP")
codetools::checkUsagePackage("VIP")
core %>% count(virus, domain)
core %>% count(virus, domain)
plot_domain()
domain
domain %>% count(virus, domain)
domain %>% count(.data$virus, .data$domain)
codetools::checkUsagePackage("VIP")
tidyr::complete(domain, virus)
tidyr::complete(domain, virus) %>% identical(tidyr::complete(domain, .data$virus))
tidyr::complete(domain, .data$virus)
codetools::checkUsagePackage("VIP")
codetools::checkUsagePackage("VIP")
s("population", directory = paste_path("VIP"))
round_up %>% f
o()
class(margin())
usethis::use_mit_license()
replace_element_feature
identity
source("~/Desktop/VIP/R/plot_table.R")
# Data --------------------------------------------------------------------
df <- read_excel_sheets("meta-analysis template_pregnancy") %>%
rename_by_fn() %>%
split_df("sheet_name") %>%
rename_by_fn()
df_efficacy <- df$pregnancy_rsv_ve %>%
mutate(
adjusted_estimate = ifelse(is.na(adjusted_estimate), crude_estimate, adjusted_estimate),
adjusted_lower_ci = ifelse(is.na(adjusted_lower_ci), crude_lower_ci, adjusted_lower_ci),
adjusted_upper_ci = ifelse(is.na(adjusted_upper_ci), crude_upper_ci, adjusted_upper_ci)
) %>%
meta_analyze_ve() %>%
meta2df() %>%
mutate(
study_label = factor(ifelse(is_meta, "Pooled", study_label)),
study_label = .fct_reorder(study_label, is_meta, .increasing = FALSE)
)
df_safety <- df$pregnancy_flu_preeclampsia %>%
mutate(
adjusted_estimate = ifelse(is.na(adjusted_estimate), crude_estimate, adjusted_estimate),
adjusted_lower_ci = ifelse(is.na(adjusted_lower_ci), crude_lower_ci, adjusted_lower_ci),
adjusted_upper_ci = ifelse(is.na(adjusted_upper_ci), crude_upper_ci, adjusted_upper_ci)
) %>%
meta_analyze_ratio(effect_measure = "RR") %>%
meta2df() %>%
mutate(
study_label = factor(ifelse(is_meta, "Pooled", study_label)),
study_label = .fct_reorder(study_label, is_meta, .increasing = FALSE)
)
df_or <- df$or_calculations %>%
odds_ratio_rowwise()
# Efficacy ----------------------------------------------------------------
p1 <- p <- df_efficacy %>%
plot_forest(
estimate = "adjusted_estimate",
lower = "adjusted_lower_ci",
upper = "adjusted_upper_ci",
y_var = "study_label",
point_color_var = "is_meta",
point_color = c("#4E4E4E", "#366895"),
point_border_thickness = 0,
x_axis_title = "Vaccine effectiveness (%)",
aspect_ratio = 0.75,
x_axis_breaks = seq(0, 100, 20),
odd_stripe_colors = c("#36689525", rep_len("#00000000", length.out = nrow(df_efficacy) - 1L)),
y_axis_labels = NULL
) %>%
add_column_table(
plot_margin = margin(),
right_cols = list("Estimate (95% CI)" = ".estimate_label"),
left_cols = list(Study = ".y_var"),
left_args = list(label_hjust = 1)
)
p1[[2]] <- p[[2]] + ggplot2::annotate(
geom = "text",
size = 12/.pt,
x = I(c(-1, -1, -1, -1)), y = I(c(-0.1, -0.2, -0.3, -0.4)),
#label = format_heterogeneity_label(6.5, 0.0034, 0.001),
label = c("underline('Heterogeneity:')", "italic(I)^2~`=`~'6.5%'", "τ^2~`=`~'0.0034'", "italic(p)~`<`~0.001"),
hjust = 0, vjust = 0.5,
parse = TRUE
)
p1
#p1[[2]] <- p[[2]] + ggplot2::annotate(
#  geom = "text",
#  size = 14/.pt,
#  x = I(-0.1), y = I(-0.15),
#  label = format_heterogeneity_label(6.5, 0.0034, 0.001),
#  hjust = 1, vjust = 0.5,
#  parse = TRUE
#)
#p1
# Safety ------------------------------------------------------------------
p3 <- p2 <- df_safety %>%
plot_forest(
estimate = "adjusted_estimate",
lower = "adjusted_lower_ci",
upper = "adjusted_upper_ci",
y_var = "study_label",
point_color_var = "is_meta",
point_color = c("#4E4E4E", "#CD2990"),
point_border_thickness = 0,
vert_line_x_position = 1,
x_axis_title = "log2 relative risk", x_axis_scale = "log2", x_axis_labels = identity,
#x_axis_title = "log2 relative risk", x_axis_scale = "log2",
#x_axis_title = "Relative risk", x_axis_breaks = seq(0.5, 2, 0.5),
aspect_ratio = 0.75,
odd_stripe_colors = c("#CD299025", rep_len("#00000000", length.out = nrow(df_safety) - 1L)),
y_axis_labels = NULL
) %>%
add_column_table(
plot_margin = margin(),
right_cols = list("Estimate (95% CI)" = ".estimate_label"),
left_cols = list(Study = ".y_var"),
left_args = list(label_hjust = 1)
)
p3[[2]] <- p2[[2]] + ggplot2::annotate(
geom = "text",
size = 12/.pt,
x = I(c(-1, -1, -1, -1)), y = I(c(-0.1, -0.2, -0.3, -0.4)),
#label = format_heterogeneity_label(6.5, 0.0034, 0.001),
label = c("underline('Heterogeneity:')", "italic(I)^2~`=`~'98.1%'", "τ^2~`=`~'0.0477'", "italic(p)~`<`~0.0001"),
hjust = 0, vjust = 0.5,
parse = TRUE
)
p3
#p3[[2]] <- p2[[2]] + ggplot2::annotate(
#  geom = "text",
#  size = 14/.pt,
#  x = I(-0.1), y = I(-0.15),
#  label = format_heterogeneity_label(6.5, 0.0034, 0.001),
#  hjust = 1, vjust = 0.5,
#  parse = TRUE
#)
#p3
RM()
RM()
# Data --------------------------------------------------------------------
df <- read_excel_sheets("meta-analysis template_pregnancy") %>%
rename_by_fn() %>%
split_df("sheet_name") %>%
rename_by_fn()
df_efficacy <- df$pregnancy_rsv_ve %>%
mutate(
adjusted_estimate = ifelse(is.na(adjusted_estimate), crude_estimate, adjusted_estimate),
adjusted_lower_ci = ifelse(is.na(adjusted_lower_ci), crude_lower_ci, adjusted_lower_ci),
adjusted_upper_ci = ifelse(is.na(adjusted_upper_ci), crude_upper_ci, adjusted_upper_ci)
) %>%
meta_analyze_ve() %>%
meta2df() %>%
mutate(
study_label = factor(ifelse(is_meta, "Pooled", study_label)),
study_label = .fct_reorder(study_label, is_meta, .increasing = FALSE)
)
df_safety <- df$pregnancy_flu_preeclampsia %>%
mutate(
adjusted_estimate = ifelse(is.na(adjusted_estimate), crude_estimate, adjusted_estimate),
adjusted_lower_ci = ifelse(is.na(adjusted_lower_ci), crude_lower_ci, adjusted_lower_ci),
adjusted_upper_ci = ifelse(is.na(adjusted_upper_ci), crude_upper_ci, adjusted_upper_ci)
) %>%
meta_analyze_ratio(effect_measure = "RR") %>%
meta2df() %>%
mutate(
study_label = factor(ifelse(is_meta, "Pooled", study_label)),
study_label = .fct_reorder(study_label, is_meta, .increasing = FALSE)
)
df_or <- df$or_calculations %>%
odds_ratio_rowwise()
# Efficacy ----------------------------------------------------------------
p1 <- p <- df_efficacy %>%
plot_forest(
estimate = "adjusted_estimate",
lower = "adjusted_lower_ci",
upper = "adjusted_upper_ci",
y_var = "study_label",
point_color_var = "is_meta",
point_color = c("#4E4E4E", "#366895"),
point_border_thickness = 0,
x_axis_title = "Vaccine effectiveness (%)",
aspect_ratio = 0.75,
x_axis_breaks = seq(0, 100, 20),
odd_stripe_colors = c("#36689525", rep_len("#00000000", length.out = nrow(df_efficacy) - 1L)),
y_axis_labels = NULL
) %>%
add_column_table(
plot_margin = margin(),
right_cols = list("Estimate (95% CI)" = ".estimate_label"),
left_cols = list(Study = ".y_var"),
left_args = list(label_hjust = 1)
)
p1[[2]] <- p[[2]] + ggplot2::annotate(
geom = "text",
size = 12/.pt,
x = I(c(-1, -1, -1, -1)), y = I(c(-0.1, -0.2, -0.3, -0.4)),
#label = format_heterogeneity_label(6.5, 0.0034, 0.001),
label = c("underline('Heterogeneity:')", "italic(I)^2~`=`~'6.5%'", "τ^2~`=`~'0.0034'", "italic(p)~`<`~0.001"),
hjust = 0, vjust = 0.5,
parse = TRUE
)
p1
#p1[[2]] <- p[[2]] + ggplot2::annotate(
#  geom = "text",
#  size = 14/.pt,
#  x = I(-0.1), y = I(-0.15),
#  label = format_heterogeneity_label(6.5, 0.0034, 0.001),
#  hjust = 1, vjust = 0.5,
#  parse = TRUE
#)
#p1
# Safety ------------------------------------------------------------------
p3 <- p2 <- df_safety %>%
plot_forest(
estimate = "adjusted_estimate",
lower = "adjusted_lower_ci",
upper = "adjusted_upper_ci",
y_var = "study_label",
point_color_var = "is_meta",
point_color = c("#4E4E4E", "#CD2990"),
point_border_thickness = 0,
vert_line_x_position = 1,
x_axis_title = "log2 relative risk", x_axis_scale = "log2", x_axis_labels = identity,
#x_axis_title = "log2 relative risk", x_axis_scale = "log2",
#x_axis_title = "Relative risk", x_axis_breaks = seq(0.5, 2, 0.5),
aspect_ratio = 0.75,
odd_stripe_colors = c("#CD299025", rep_len("#00000000", length.out = nrow(df_safety) - 1L)),
y_axis_labels = NULL
) %>%
add_column_table(
plot_margin = margin(),
right_cols = list("Estimate (95% CI)" = ".estimate_label"),
left_cols = list(Study = ".y_var"),
left_args = list(label_hjust = 1)
)
p3[[2]] <- p2[[2]] + ggplot2::annotate(
geom = "text",
size = 12/.pt,
x = I(c(-1, -1, -1, -1)), y = I(c(-0.1, -0.2, -0.3, -0.4)),
#label = format_heterogeneity_label(6.5, 0.0034, 0.001),
label = c("underline('Heterogeneity:')", "italic(I)^2~`=`~'98.1%'", "τ^2~`=`~'0.0477'", "italic(p)~`<`~0.0001"),
hjust = 0, vjust = 0.5,
parse = TRUE
)
p3
#p3[[2]] <- p2[[2]] + ggplot2::annotate(
#  geom = "text",
#  size = 14/.pt,
#  x = I(-0.1), y = I(-0.15),
#  label = format_heterogeneity_label(6.5, 0.0034, 0.001),
#  hjust = 1, vjust = 0.5,
#  parse = TRUE
#)
#p3
p1
p2
p3
p <- list(p1 = p1, p2 = p3)
p3 <- p2 <- df_safety %>%
plot_forest(
estimate = "adjusted_estimate",
lower = "adjusted_lower_ci",
upper = "adjusted_upper_ci",
y_var = "study_label",
point_color_var = "is_meta",
point_color = c("#4E4E4E", "#CD2990"),
point_border_thickness = 0,
vert_line_x_position = 1,
#x_axis_title = "log2 relative risk", x_axis_scale = "log2", x_axis_labels = identity,
#x_axis_title = "log2 relative risk", x_axis_scale = "log2",
x_axis_title = "Relative risk", x_axis_breaks = seq(0.5, 2, 0.5),
aspect_ratio = 0.75,
odd_stripe_colors = c("#CD299025", rep_len("#00000000", length.out = nrow(df_safety) - 1L)),
y_axis_labels = NULL
) %>%
add_column_table(
plot_margin = margin(),
right_cols = list("Estimate (95% CI)" = ".estimate_label"),
left_cols = list(Study = ".y_var"),
left_args = list(label_hjust = 1)
)
p3[[2]] <- p2[[2]] + ggplot2::annotate(
geom = "text",
size = 12/.pt,
x = I(c(-1, -1, -1, -1)), y = I(c(-0.1, -0.2, -0.3, -0.4)),
#label = format_heterogeneity_label(6.5, 0.0034, 0.001),
label = c("underline('Heterogeneity:')", "italic(I)^2~`=`~'98.1%'", "τ^2~`=`~'0.0477'", "italic(p)~`<`~0.0001"),
hjust = 0, vjust = 0.5,
parse = TRUE
)
p3
p %>% preview()
p %>% preview()
p %>% preview(h=6,w=6)
p %>% preview(h=6,w=6)
df_or <- df$or_calculations %>%
odds_ratio_rowwise()
df_or
df_or %>% select(or)
df$or_calculations
odds_ratio_rowwise
df$or_calculations %>% fill_2x2()
df$or_calculations %>% fill_2x2() %>% select(contains(".r"))
odds_ratio_rowwise %>% fn_defaults()
odds_ratio_rowwise %>% fn_defaults() %>% pull(default)
odds_ratio_rowwise %>% fn_defaults() %>% pull(default) %>% setdiff(names(df$or_calculations))
odds_ratio_rowwise %>% fn_defaults() %>% pull(default) %>% setdiff(names(df$or_calculations), .)
df$or_calculations %>% fill_2x2() %>% select(contains(".r"))
s("fill_2x2")
df_or <- df$or_calculations %>%
odds_ratio_rowwise()
df_or
xlsx(df_or)
df$or_calculations %>%
fill_2x2(replace_columns = TRUE)
df_or <- df$or_calculations %>%
fill_2x2(replace_columns = TRUE) %>%
odds_ratio_rowwise()
xlsx(df_or)
df_or <- df$or_calculations %>%
fill_2x2(replace_columns = TRUE) %>%
odds_ratio_rowwise() %>%
select(-c(sheet_name, .calculable, method, n_total_1, pos:tp))
xlsx(df_or)
f(remove_null)
f(remove_cols_all_na)
RM()
# install.packages("devtools")
devtools::install_github("abersm/VIP")
s("devtools::install_github(abersm/")
s('devtools::install_github("abersm/')
s("devtools::install_github(")
s("auth_token")
# install.packages("devtools")
devtools::install_github("abersm/VIP", auth_token = "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")
# Make sure devtools is installed (skip next line if devtools already installed)
install.packages("devtools")
# Install VIP package from github repository
devtools::install_github("abersm/VIP", auth_token = "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")
install.packages("devtools")
vip_shiny()
library(VIP)
vip_shiny()
VIP:::vip_shiny()
